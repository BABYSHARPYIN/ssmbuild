<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
    <import resource="helloBean.xml"/>
    <import resource="studentBean.xml"/>

    <!--AOP bean 注册-->
    <bean id="userService" class="service.UserServiceImpl"/>
    <bean id="log" class="log.Log"/>
    <bean id="afterLog" class="log.AfterLog"/>

    <!--方式一: 继承 Spring 原生接口配置 aop-->
    <!--<aop:config>
        &lt;!&ndash;切入点: expression 表达式: execution(要执行的位置! * * *(*))&ndash;&gt;
        <aop:pointcut id="pointcut" expression="execution(* service.UserServiceImpl.*(..))"/>

        &lt;!&ndash;执行环绕增强&ndash;&gt;
        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>-->

    <!--方式二: 自定义类-->
    <!--<bean id="diy" class="aop.DiyPointCut"/>
    <aop:config>
        &lt;!&ndash;自定义切面,ref 指向要引用的bean&ndash;&gt;
        <aop:aspect ref="diy">
        &lt;!&ndash;切入点&ndash;&gt;
            <aop:pointcut id="point" expression="execution(* service.UserServiceImpl.*(..))"/>
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>-->

    <!--方式三: 使用注解实现 aop-->
    <bean id="diy" class="aop.AnnotationPointCut"/>
    <!--开启 aop 注解支持 JDK默认实现(proxy-target-class="false") cglib(proxy-target-class="true") -->
    <aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>